id,mapping_id:id,external_field,field_id:id,type,evaluation_type,external_type,child_mapping_id:id,alternative_key,in_function,out_function
magentoerpconnect.mag1500_product_category_level,magentoerpconnect.mag1500_product_category,level,magentoerpconnect.field_product_category_level,in,direct,int,,False,,
magentoerpconnect.mag1500_product_category_name,magentoerpconnect.mag1500_product_category,name,product.field_product_category_name,in_out,direct,unicode,,False,"result=[('name', resource['name'] or 'UNDEFINED'),('magento_exportable',True)]","result=[('name',resource['name'])]"
magentoerpconnect.mag1500_product_category_is_active,magentoerpconnect.mag1500_product_category,is_active,magentoerpconnect.field_product_category_is_active,in_out,direct,int,,False,,
magentoerpconnect.mag1500_product_category_parent_id,magentoerpconnect.mag1500_product_category,parent_id,product.field_product_category_parent_id,in_out,direct,int,,False,,
magentoerpconnect.mag1500_product_category_meta_keywords,magentoerpconnect.mag1500_product_category,meta_keywords,magentoerpconnect.field_product_category_meta_keywords,in_out,direct,unicode,,False,,
magentoerpconnect.mag1500_product_category_default_sort_by,magentoerpconnect.mag1500_product_category,default_sort_by,,in_out,function,unicode,,False,"if 'default_sort_by' in resource:
    if resource['default_sort_by']:
        att_id = self.pool.get('magerp.product_category_attribute_options').get_create_option_id(cr, uid, resource['default_sort_by'],'sort_by', context=context)
    else:
        att_id = self.pool.get('magerp.product_category_attribute_options').get_create_option_id(cr, uid, 'None','sort_by', context=context)
    result=[('default_sort_by',att_id)]","if 'default_sort_by' in resource:
    cat_attr_option = self.pool.get('magerp.product_category_attribute_options').browse(cr, uid, resource['default_sort_by'][0], context=context)
    result=[('default_sort_by', cat_attr_option.value)]"
magentoerpconnect.mag1500_product_category_updated_at,magentoerpconnect.mag1500_product_category,updated_at,magentoerpconnect.field_product_category_magerp_stamp,in,direct,unicode,,False,,
magentoerpconnect.mag1500_product_category_include_in_menu,magentoerpconnect.mag1500_product_category,include_in_menu,magentoerpconnect.field_product_category_include_in_menu,in_out,direct,int,,False,,
magentoerpconnect.mag1500_product_category_page_layout,magentoerpconnect.mag1500_product_category,page_layout,,in_out,function,unicode,,False,"if resource['page_layout']:
    att_id = self.pool.get('magerp.product_category_attribute_options').get_create_option_id(cr, uid, resource['page_layout'],'page_layout', context=context)
else:
    att_id = self.pool.get('magerp.product_category_attribute_options').get_create_option_id(cr, uid, 'None','page_layout', context=context)
result=[('page_layout',att_id)]","if 'page_layout' in resource:
    result=[('page_layout', resource['page_layout'][1] or '')]"
magentoerpconnect.mag1500_product_category_available_sort_by,magentoerpconnect.mag1500_product_category,available_sort_by,,in_out,function,unicode,,False,"if 'use_default_available_sort_by' in resource:
    attr_ids = []
    cat_attr_obj = self.pool.get('magerp.product_category_attribute_options')
    if resource['available_sort_by']:
        for val in resource['available_sort_by']:
            attr_ids.append(cat_attr_obj.get_create_option_id(cr, uid, val,'sort_by', context=context))
        result=[('available_sort_by', [(6, 0, attr_ids)]), ('use_default_available_sort_by', False)]
    else:
        result=[('use_default_available_sort_by', True)]","if 'use_default_available_sort_by' in resource:
    if resource['use_default_available_sort_by']:
        res = u'None'
    else:
        res = []
        for cat_attr_option in self.pool.get('magerp.product_category_attribute_options').browse(cr, uid, record['available_sort_by'], context=context):
            res.append(cat_attr_option.value)
    result=[('available_sort_by', res)]"
magentoerpconnect.mag1500_product_category_url_key,magentoerpconnect.mag1500_product_category,url_key,magentoerpconnect.field_product_category_url_key,in_out,direct,unicode,,False,,
magentoerpconnect.mag1500_product_category_meta_description,magentoerpconnect.mag1500_product_category,meta_description,magentoerpconnect.field_product_category_meta_description,in_out,direct,unicode,,False,,
magentoerpconnect.mag1500_product_category_description,magentoerpconnect.mag1500_product_category,description,magentoerpconnect.field_product_category_description,in_out,direct,unicode,,False,,
magentoerpconnect.mag1500_product_category_meta_title,magentoerpconnect.mag1500_product_category,meta_title,magentoerpconnect.field_product_category_meta_title,in_out,direct,unicode,,False,,
magentoerpconnect.mag1500_product_category_is_anchor,magentoerpconnect.mag1500_product_category,is_anchor,magentoerpconnect.field_product_category_is_anchor,in_out,direct,int,,False,,
magentoerpconnect.mag1500_product_category_image,magentoerpconnect.mag1500_product_category,image,,in_out,function,unicode,,False,"image_binary = False
if resource['image'] and not resource['image']=='None':
    try:
        image_binary = conn.call('ol_catalog_category_media.info', [int(data['category_id'])])
    except Exception, e:
        print e
        pass
    if image_binary:
        image_binary = base64.encodestring(base64.urlsafe_b64decode(image_binary[0]['image_data']))
result=[('image_name',ifield),('image',image_binary)]","if 'image' in resource:
    if resource['image']:
        img = base64.decodestring(record['image'])
        img_bin_enc = base64.encodestring(img)
        conn.call('ol_catalog_category_media.create', [record['image_name'], img_bin_enc])
        result = [('image',record['image_name'])]
    else:
        result=[]"
