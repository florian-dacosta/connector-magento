id,sequence,type,evaluation_type,external_field,field_id:id,external_type,alternative_key,mapping_id:id,function_name,in_function,out_function,child_mapping_id:id,datetime_format
mag1500_sale_order_line_qty_ordered=>,,in,direct,qty_ordered,sale.field_sale_order_line_product_uos_qty,float,False,mag1500_sale_order_line,,,,,
mag1500_sale_order_line_discount_amount=>,,in,function,discount_amount,,float,False,mag1500_sale_order_line,discount_amount,"if ifield:
    result=[('discount', float(data['price']) != 0 and float(data['qty_ordered']) != 0 and float(100*ifield)/(float(data['price'])*float(data['qty_ordered'])) or 0)]",,,
mag1500_sale_order_line_name=>,,in,direct,name,sale.field_sale_order_line_name,unicode,False,mag1500_sale_order_line,,,,,
mag1500_sale_order_line_option=>,,in,function,product_options,,unicode,False,mag1500_sale_order_line,option,"if ifield:
    import re
    options_label = []
    clean = re.sub('\w:\w:|\w:\w+;', '', ifield)
    for each in clean.split('{'):
        if each.startswith('""label""'):
            split_info = each.split(';')	
            options_label.append('%s: %s [%s]' % (split_info[1], split_info[3], data['sku']))
	
    result=[('notes',  """".join(options_label).replace('""""', '\n').replace('""', ''))]
",,,
mag1500_sale_order_line_product_id=>,,in,direct,product_id,sale.field_sale_order_line_product_id,int,False,mag1500_sale_order_line,,,,,
mag1500_sale_order_line_qty_ordered=>,,in,direct,qty_ordered,sale.field_sale_order_line_product_uom_qty,float,False,mag1500_sale_order_line,,,,,
mag1500_sale_order_line_price=>,,in,function,price,,unicode,False,mag1500_sale_order_line,price,"result=[
('price_unit_tax_included', (float(resource['row_total']) + float(resource['tax_amount']))/float(resource['qty_ordered'])),
('price_unit_tax_excluded', (float(resource['row_total']))/float(resource['qty_ordered'])),
('tax_rate', float(resource['row_total']) and (float(resource['tax_amount'])/float(resource['row_total']))),
]",,,
