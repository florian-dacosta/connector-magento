id,sequence,type,evaluation_type,external_field,field_id:id,external_type,alternative_key,mapping_id:id,function_name,in_function,out_function,child_mapping_id:id,datetime_format
mag1500_sale_order_magento_name=>,,in,direct,increment_id,sale.field_sale_order_name,unicode,False,mag1500_sale_order,,,,,
mag1500_sale_order_magento_incrementid=>,,in,direct,increment_id,magentoerpconnect.field_sale_order_magento_incrementid,unicode,False,mag1500_sale_order,,,,,
mag1500_sale_order_grand_total=>,,in,direct,grand_total,base_sale_multichannels.field_sale_order_ext_total_amount,float,False,mag1500_sale_order,,,,,
mag1500_sale_order_tax_amount,,in,direct,tax_amount,base_sale_multichannels.field_sale_order_ext_total_amount_tax,float,False,mag1500_sale_order,,,,,
magentoerpconnect.mag1500_sale_order_payments_mapping=>,,in,function,payment,,unicode,False,magentoerpconnect.mag1500_sale_order,payments_mapping,"pay_method_obj = self.pool.get('payment.method')
method_ids = pay_method_obj.search(cr, uid, [['name', '=', resource['payment']['method']]], context=context)
if method_ids:
    method_id = method_ids[0]
else:
    method_id = pay_method_obj.create(cr, uid, {'name' : resource['payment']['method']}, context=context)
result = [('payment_method_id', method_id)]",,,
mag1500_sale_order_ext_customer_id=>,,in,direct,customer_id,sale.field_sale_order_partner_id,int,False,mag1500_sale_order,,,,,
mag1500_sale_order_billing_address=>,50,in,sub-mapping,billing_address,sale.field_sale_order_partner_invoice_id,dict,False,mag1500_sale_order,,,,mag1500_res_partner_address,
mag1500_sale_order_shipping_address=>,50,in,sub-mapping,shipping_address,sale.field_sale_order_partner_shipping_id,dict,False,mag1500_sale_order,,,,mag1500_res_partner_address,
mag1500_sale_order_items=>,100,in,sub-mapping,items,sale.field_sale_order_order_line,dict,False,mag1500_sale_order,,,,mag1500_sale_order_line,
mag1500_sale_order_cod_fee=>,,in,function,cod_fee,,float,False,mag1500_sale_order,cod_fee,"#TODO map me
",,,
mag1500_sale_order_gift_certificates_amount=>,,in,function,giftcert_amount,,float,False,mag1500_sale_order,gift_certificates_amount,"result=[('gift_certificates_amount', ifield)]",,,
mag1500_sale_order_gift_certificates_code=>,,in,function,giftcert_code,,unicode,False,mag1500_sale_order,gift_certificates_code,"result = [('gift_certificates_code', ifield)]",,,
mag1500_sale_order_carrier_id=>,,in,function,shipping_method,,unicode,False,mag1500_sale_order,carrier_id,"if ifield:
    carrier_ids = self.pool.get('delivery.carrier').search(cr, uid, [('magento_code', '=', ifield)])
    if carrier_ids:
        result=[('carrier_id', carrier_ids[0])]
    else:
        fake_partner_id = self.pool.get('res.partner').search(cr, uid, [])[0]
        model_data_obj = self.pool.get('ir.model.data')
        model, product_id = model_data_obj.get_object_reference(cr, uid, 'base_sale_multichannels', 'product_product_shipping')
        carrier_id = self.pool.get('delivery.carrier').create(cr, uid, {'partner_id' : fake_partner_id, 'product_id' : product_id, 'name' : ifield, 'magento_code' : ifield})
        result=[('carrier_id', carrier_id)]",,,
mag1500_sale_order_shipping_amount_tax_included=>,,in,function,base_shipping_incl_tax,,float,False,mag1500_sale_order,shipping_amount_tax_included,"amount_tax_inc = float(resource.get('base_shipping_incl_tax', 0.0)) - float(resource.get('shipping_discount_amount', 0.0))
amount_tax_exc = float(resource.get('shipping_amount', 0))

if amount_tax_exc and amount_tax_inc:
    tax_rate = amount_tax_inc/amount_tax_exc -1
else:
    tax_rate = 0

result=[
    ('shipping_amount_tax_included', amount_tax_inc),
    ('shipping_amount_tax_excluded', amount_tax_exc),
    ('shipping_tax_rate', tax_rate),
]",,,
mag1500_sale_order_date,,in,direct,created_at,sale.field_sale_order_date_order,datetime,False,mag1500_sale_order,,,,,%Y-%m-%d %H:%M:%S
